# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
  adapter: postgresql
  encoding: unicode
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>

development:
  <<: *default
  database: coffeShLe_development
  username: <%= ENV.fetch("DB_USERNAME") %>
  password: <%= ENV.fetch("DB_PASSWORD") %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: coffeShLe_test
  username: <%= ENV.fetch("DB_USERNAME") %>
  password: <%= ENV.fetch("DB_PASSWORD") %>



  # SQLite3 write its data on the local filesystem, as such it requires
  # persistent disks. If you are deploying to a managed service, you should
  # make sure it provides disk persistence, as many don't.
  #


  # The password associated with the PostgreSQL role (username).


  # The TCP port the server listens on. Defaults to 5432.
  # If your server runs on a different port number, change accordingly.


  # Similarly, if you deploy your application as a Docker container, you must
  # ensure the database is located in a persisted volume.
production:
  <<: *default
  database: coffeShLe_production
  # The `host`, `port` and `database` properties are required
  # for production as the default values differ from your local machine
  url: <%= ENV.fetch("DB_URL") %>
  
  # database: path/to/persistent/storage/production.sqlite3